{{#if publish}}
runs-on: ubuntu-latest
defaults:
  run:
    shell: bash
permissions:
  deployments: write
  id-token: write
steps:
  - name: Checkout
    uses: actions/checkout@v3
    with:
      ref: $\{{ fromJSON(needs.release.outputs.release).tagName }}
  - name: Setup Node
    uses: actions/setup-node@v3
    with:
      node-version: 18.x
  - name: Install npm@latest
    run: |
      npm i --prefer-online --no-fund --no-audit -g npm@latest
      npm config set '//registry.npmjs.org/:_authToken'=\${PUBLISH_TOKEN}
  - name: Publish
    env:
      PUBLISH_TOKEN: $\{{ secrets.PUBLISH_TOKEN }}
    run: npm publish --provenance
{{else}}
runs-on: ubuntu-latest
defaults:
  run:
    shell: bash
steps:
  {{> stepNode lockfile=false }}
  - name: View in Registry
    run: |
      EXIT_CODE=0

      function is_published {
        if npm view "$@" --loglevel=error > /dev/null; then
          echo 0
        else
          echo 1
        fi
      }

      for release in $(echo '$\{{ needs.release.outputs.releases }}' | jq -r '.[] | @base64'); do
        name=$(echo "$release" | base64 --decode | jq -r .pkgName)
        version=$(echo "$release" | base64 --decode | jq -r .version)
        spec="$name@$version"
        status=$(is_published "$spec")
        if [[ "$status" -eq 1 ]]; then
          echo "$spec ERROR"
          EXIT_CODE=$status
        else
          echo "$spec OK"
        fi
      done

      exit $EXIT_CODE
{{/if}}
