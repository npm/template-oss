# This file is automatically added by @npmcli/template-oss. Do not edit.

name: Release

on:
  push:
    branches:
      - main
      - latest

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    outputs:
      ref: ${{ steps.outputs.outputs.ref }}
      sha: ${{ steps.outputs.outputs.sha }}
    name: Release
    if: github.repository_owner == 'npm'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Git User
        run: |
          git config --global user.email "npm-cli+bot@github.com"
          git config --global user.name "npm CLI robot"
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install npm@latest
        run: npm i --prefer-online --no-fund --no-audit -g npm@latest
      - name: npm Version
        run: npm -v
      - name: Install Dependencies
        run: npm i --ignore-scripts --no-audit --no-fund
      - name: Release Please
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx --offline template-oss-release-please ${{ github.ref_name }}
      - name: Set Outputs
        id: outputs
        run: |
          echo "::set-output name=ref::${{ fromJSON(steps.release.outputs.pr).headBranchName }}"
          echo "::set-output name=sha::${{ fromJSON(steps.release.outputs.pr).sha }}"

  pull-request:
    needs: release
    outputs:
      sha: ${{ steps.commit.outputs.sha }}
    name: Pull Request
    if: github.repository_owner == 'npm' && needs.release.outputs.ref
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Create Check
        uses: LouisBrunner/checks-action@v1.3.1
        id: check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: in_progress
          name: Pull Request
          sha: ${{ needs.release.outputs.sha }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.release.outputs.ref }}
      - name: Setup Git User
        run: |
          git config --global user.email "npm-cli+bot@github.com"
          git config --global user.name "npm CLI robot"
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install npm@latest
        run: npm i --prefer-online --no-fund --no-audit -g npm@latest
      - name: npm Version
        run: npm -v
      - name: Install Dependencies
        run: npm i --ignore-scripts --no-audit --no-fund
      - name: Run Post Pull Request Actions
        run: npm run rp-pull-request --ignore-scripts -ws -iwr --if-present
      - name: Commit and Push
        id: commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git commit -am "chore: post pull request" || true
          echo "::set-output sha=$(git rev-parse HEAD)"
          git push
      - name: Get Current Job
        uses: actions/github-script@v6
        id: job
        env:
          JOB_NAME: Pull Request
        with:
          result-encoding: string
          script: |
            const jobs = await octokit.paginate(octokit.rest.actions.listJobsForWorkflowRun, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            })
            const { JOB_NAME } = process.env
            return jobs.find((job) => job.name === JOB_NAME)?.html_url
      - name: Conclude Check
        uses: LouisBrunner/checks-action@v1.3.1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          conclusion: ${{ job.status }}
          details_url: ${{ steps.job.outputs.result }}
          id: ${{ steps.check.outputs.check_id }}

  ci:
    name: CI - Release
    needs: [ release, pull-request ]
    uses: ./.github/workflows/ci-release.yml
    with:
      ref: ${{ needs.release.outputs.ref }}
      check_sha: ${{ needs.pull-request.outputs.sha }}
